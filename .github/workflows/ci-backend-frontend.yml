name: "CI: Backend (Rubocop / RSpec), Frontend (ESLint / Prettier)"

on:
  push:

jobs:
  backend-ci:
    name: "Backend CI: Rubocop / RSpec"
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        ports:
          - "5432:5432"
        env:
          POSTGRES_USER: ${{ secrets.DB_USERNAME }}
          POSTGRES_PASSWORD: ${{ secrets.DB_PASSWORD }}
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}

    steps:
      # GitHubリポジトリのコードをチェックアウト
      - uses: actions/checkout@v4

      # Rubyのセットアップ
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.1.4 # 使用しているRubyのバージョンを明示
          bundler-cache: true

      # バックエンドの依存関係をインストール
      - name: Install Dependencies
        run: bundle install
        working-directory: ./backend

      - name: Setup Database
        env:
          DB_USERNAME: ${{ secrets.DB_USERNAME }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_HOST: localhost
          DB_PORT: ${{ secrets.DB_PORT }}
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
        run: |
          until pg_isready -h localhost -p $DB_PORT -U $DB_USERNAME; do
              echo "Waiting for Postgres..."
              sleep 1
          done
          bundle exec rails db:create
          bundle exec rails db:schema:load
        working-directory: ./backend

      # Rubocopによるコードの静的解析と自動修正の実行
      - name: Run Rubocop
        run: bundle exec rubocop -A
        working-directory: ./backend

      # RSpecによるテストの実行
      - name: Run RSpec
        env:
            DB_USERNAME: ${{ secrets.DB_USERNAME }}
            DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
            DB_HOST: localhost
            DB_PORT: ${{ secrets.DB_PORT }}
            POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
        run: bin/rspec
        working-directory: ./backend

      # Fly.io CLI をインストール
      - name: Install Fly.io CLI
        run: |
          curl -L https://fly.io/install.sh | sh
          echo "$HOME/.fly/bin" >> $GITHUB_PATH

      # Fly.io へのデプロイ
      - name: Deploy to Fly.io
        if: github.ref == 'refs/heads/main'
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
        run: |
          flyctl deploy --remote-only
        working-directory: ./backend


  frontend-ci:
    name: "Frontend CI: ESLint / Prettier"
    runs-on: ubuntu-latest

    steps:
      # GitHubリポジトリのコードをチェックアウト
      - uses: actions/checkout@v4

      # Node.jsのセットアップ
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '18' # Next.jsが要求するNode.jsバージョンを指定

      # フロントエンドの依存関係をキャッシュ
      - name: Cache Node Modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      # フロントエンドの依存関係をインストール
      - name: Install Dependencies
        run: npm ci --legacy-peer-deps
        working-directory: ./frontend

      # ESLintによるコードのリントと修正の実行
      - name: Run ESLint
        run: npm run lint:fix
        working-directory: ./frontend

      # Prettierによるコードフォーマットの実行
      - name: Run Prettier
        run: npm run format
        working-directory: ./frontend